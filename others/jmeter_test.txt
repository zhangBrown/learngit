基准压测
  对于每个业务并发查看响应时间是否满足需求
  1 1 100
  并发基准，业务量基准
持续负载(rps定时器 阶梯加压线程)
(持续稳定增加系统负载，寻找性能拐点。
测试系统承受最大负载量。)
  对于每个业务取中间并发数持续负载
  300 1 持续10分钟
  整合业务成一个事物，继续负载
  
负载测试
	(1)200个并发用户访问时的最大响应时间，最大吞吐量
	(2)21个小时内要处理 1000 笔业务，找到最大并发数
	(3)响应时间不超过10s的最大负载
	(4)cpu利用率不高于60%下的最大并发数
  
极限压力
(发现应用系统性能下降拐点。
大业务量情况下长时间运行)
  最大并发下服务运行情况
稳定性测试(系统最大的80%)
  阶梯加压，好复杂运行一段时间，阶梯减压。
并发测试
  加入集合点
监听对象
  服务器内存 cpu 磁盘
  mysql服务内存 cpu
  本地网络监听，是否延迟阻塞

指标
rps(压力)
  并发数和服务器响应时间决定
  (每秒启动4个线程->rps=4/s
  循环10次->rps=40/s)
  单请求，hps=rps
tps
qps
throughput
  衡量吞吐量指标tps qps表示
  单接口tps=qps
  多接口，事物控制器下执行的，才是tps
  聚合报告中的，表示每秒响应完成的请求
持续迭代下
  并发数=rps*响应时间
2 5 8原则
最大并发数=单次响应时间*业务量/总的业务时间

分析指标
响应时间和吞吐量挂钩
响应时间吞吐量和成功率挂钩

压测(500)
验证最大负载下持续服务能力
负载测试（500持续加压）
验证所能承受的最大负载数
混合业务，通过WSC分配比重，逐渐加压

30分钟内支持5000次登录
线程数=业务数*单次业务消耗时间/60*考察时间段(分钟)
单次业务时间要加上思考时间

服务器指标分析(cpu)
top
vmstat 1 10 
top -Hp pid
pidstat -p pid -w 1 10
dstat -y
saq -q

分析思路
整体系统cpu利用率
  vmstat
    利用率us+sys
    负载r>cpu个数
内存利用率
  占用率free-h
  内存交换vmstat
     swap>0 si/so=0 正常
                            >0内存不足
io利用率和延迟
  使用情况
    sar -d 查看%util >60% ->告警
    iostat 查看iowait >70 满载嫌疑
  io wait
    vmstat查看wa>20 等待严重
        bi bo wa 同时过大，出现了瓶颈
     每秒读取，写入，等待io时间
  dmesg 查看io错误
网络利用率
sar - n DEV 1 3
